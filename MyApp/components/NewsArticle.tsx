import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  Image,
  StyleSheet,
  ScrollView,
  Dimensions,
} from 'react-native';
import { COLORS, SPACING, BORDER_RADIUS, SHADOWS, CONTAINER_STYLES } from '../styles/GlobalStyles';

interface NewsArticleProps {
  bannerImage?: string;
  title?: string;
  authorName?: string;
  authorAvatar?: string;
  publishDate?: string;
  content?: string;
}

const NewsArticle: React.FC<NewsArticleProps> = ({
  bannerImage = 'https://images.unsplash.com/photo-1551033406-611cf9a28f67?w=800&h=400&fit=crop',
  title = 'React Native: X√¢y d·ª±ng ·ª©ng d·ª•ng di ƒë·ªông ƒëa n·ªÅn t·∫£ng',
  authorName = 'S∆°n Nguy·ªÖn',
  authorAvatar = 'https://i.pravatar.cc/150?u=a042581f4e29026704d',
  publishDate = '07/09/2025',
  content = `React Native ƒë√£ c√°ch m·∫°ng h√≥a lƒ©nh v·ª±c ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông b·∫±ng c√°ch cho ph√©p c√°c nh√† ph√°t tri·ªÉn x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng g·ªëc cho c·∫£ iOS v√† Android t·ª´ m·ªôt c∆° s·ªü m√£ duy nh·∫•t. ƒê∆∞·ª£c ph√°t tri·ªÉn b·ªüi Facebook, framework n√†y s·ª≠ d·ª•ng th∆∞ vi·ªán React, m·ªôt trong nh·ªØng th∆∞ vi·ªán JavaScript ph·ªï bi·∫øn nh·∫•t ƒë·ªÉ x√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng.

∆Øu ƒëi·ªÉm l·ªõn nh·∫•t c·ªßa React Native l√† hi·ªáu qu·∫£ trong vi·ªác ph√°t tri·ªÉn. Thay v√¨ ph·∫£i vi·∫øt hai ·ª©ng d·ª•ng ri√™ng bi·ªát cho iOS v√† Android, c√°c developer c√≥ th·ªÉ s·ª≠ d·ª•ng m·ªôt codebase chung. ƒêi·ªÅu n√†y kh√¥ng ch·ªâ ti·∫øt ki·ªám th·ªùi gian m√† c√≤n gi·∫£m thi·ªÉu chi ph√≠ b·∫£o tr√¨ v√† c·∫≠p nh·∫≠t.

React Native s·ª≠ d·ª•ng ki·∫øn tr√∫c bridge ƒë·ªÉ k·∫øt n·ªëi JavaScript v·ªõi native code. Khi m·ªôt component ƒë∆∞·ª£c render, n√≥ s·∫Ω ƒë∆∞·ª£c chuy·ªÉn ƒë·ªïi th√†nh c√°c component native t∆∞∆°ng ·ª©ng. V√≠ d·ª•, m·ªôt <View> trong React Native s·∫Ω tr·ªü th√†nh UIView tr√™n iOS v√† View tr√™n Android.

M·ªôt trong nh·ªØng t√≠nh nƒÉng n·ªïi b·∫≠t kh√°c l√† Hot Reload, cho ph√©p developers xem ngay l·∫≠p t·ª©c nh·ªØng thay ƒë·ªïi h·ªç v·ª´a th·ª±c hi·ªán m√† kh√¥ng c·∫ßn build l·∫°i to√†n b·ªô ·ª©ng d·ª•ng. ƒêi·ªÅu n√†y gi√∫p tƒÉng ƒë√°ng k·ªÉ t·ªëc ƒë·ªô ph√°t tri·ªÉn v√† debugging.

Nhi·ªÅu c√¥ng ty l·ªõn ƒë√£ ch·ªçn React Native cho c√°c ·ª©ng d·ª•ng di ƒë·ªông c·ªßa h·ªç, bao g·ªìm Facebook, Instagram, Uber, Airbnb, v√† Tesla. ƒêi·ªÅu n√†y ch·ª©ng minh r·∫±ng framework n√†y ƒë·ªß m·∫°nh m·∫Ω ƒë·ªÉ x·ª≠ l√Ω c√°c ·ª©ng d·ª•ng c√≥ l∆∞u l∆∞·ª£ng truy c·∫≠p cao v√† y√™u c·∫ßu hi·ªáu su·∫•t cao.`
}) => {
  const [screenData, setScreenData] = useState(Dimensions.get('window'));

  useEffect(() => {
    const onChange = (result: { window: any }) => {
      setScreenData(result.window);
    };

    const subscription = Dimensions.addEventListener('change', onChange);
    return () => subscription?.remove();
  }, []);

  // Responsive font sizes v·ªõi lineHeight chu·∫©n
  const getResponsiveFontSizes = () => {
    const { width } = screenData;
    const isTablet = width >= 768;
    const isLargePhone = width >= 414;

    return {
      title: isTablet ? 28 : isLargePhone ? 24 : 22,
      titleLineHeight: isTablet ? 36 : isLargePhone ? 32 : 28,
      content: isTablet ? 18 : isLargePhone ? 16 : 15,
      contentLineHeight: isTablet ? 28 : isLargePhone ? 25 : 23,
      authorName: isTablet ? 16 : 15,
      authorLineHeight: isTablet ? 22 : 20,
      date: isTablet ? 14 : 13,
      dateLineHeight: isTablet ? 20 : 18,
    };
  };

  const fontSizes = getResponsiveFontSizes();

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      {/* Banner Image */}
      <View style={styles.bannerContainer}>
        <Image 
          source={{ uri: bannerImage }} 
          style={[styles.bannerImage, { width: screenData.width }]}
        />
      </View>

      {/* Content Container */}
      <View style={styles.contentContainer}>
        {/* Title */}
        <Text style={[styles.title, { 
          fontSize: fontSizes.title,
          lineHeight: fontSizes.titleLineHeight
        }]}>
          {title}
        </Text>

        {/* Author Info */}
        <View style={styles.authorContainer}>
          <Image 
            source={{ uri: authorAvatar }} 
            style={styles.authorAvatar}
          />
          <View style={styles.authorInfo}>
            <Text style={[styles.authorName, { 
              fontSize: fontSizes.authorName,
              lineHeight: fontSizes.authorLineHeight
            }]}>
              {authorName}
            </Text>
            <Text style={[styles.publishDate, { 
              fontSize: fontSizes.date,
              lineHeight: fontSizes.dateLineHeight
            }]}>
              ƒêƒÉng ng√†y: {publishDate}
            </Text>
          </View>
        </View>

        {/* Article Content */}
        <View style={styles.contentSection}>
          <Text style={[styles.content, { 
            fontSize: fontSizes.content,
            lineHeight: fontSizes.contentLineHeight
          }]}>
            {content}
          </Text>
        </View>

        {/* Tags */}
        <View style={styles.tagsContainer}>
          <View style={styles.tag}>
            <Text style={styles.tagText}>#ReactNative</Text>
          </View>
          <View style={styles.tag}>
            <Text style={styles.tagText}>#MobileDev</Text>
          </View>
          <View style={styles.tag}>
            <Text style={styles.tagText}>#JavaScript</Text>
          </View>
        </View>

        {/* Debug Info */}
        <View style={styles.debugContainer}>
          <Text style={styles.debugText}>
            üì± Screen: {Math.round(screenData.width)} x {Math.round(screenData.height)}
          </Text>
          <Text style={styles.debugText}>
            üìù Font sizes - Title: {fontSizes.title}px, Content: {fontSizes.content}px
          </Text>
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: COLORS.backgroundPrimary,
  },
  bannerContainer: {
    width: '100%',
    backgroundColor: COLORS.backgroundSecondary,
  },
  bannerImage: {
    height: 200,
    resizeMode: 'cover',
  },
  contentContainer: {
    paddingHorizontal: SPACING.lg,
    paddingVertical: SPACING.lg,
  },
  title: {
    fontWeight: '700',
    color: COLORS.textPrimary,
    marginBottom: SPACING.xl,
    fontFamily: 'System',
  },
  authorContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: SPACING.xl,
    paddingBottom: SPACING.lg,
    borderBottomWidth: 1,
    borderBottomColor: COLORS.borderLight,
  },
  authorAvatar: {
    width: 50,
    height: 50,
    borderRadius: 25,
    marginRight: SPACING.md,
  },
  authorInfo: {
    flex: 1,
  },
  authorName: {
    fontWeight: '600',
    color: COLORS.textPrimary,
    marginBottom: SPACING.sm,
  },
  publishDate: {
    color: COLORS.textSecondary,
    fontWeight: '400',
  },
  contentSection: {
    marginBottom: SPACING.xl,
  },
  content: {
    color: COLORS.textPrimary,
    textAlign: 'left',
    fontFamily: 'System',
    marginBottom: SPACING.md,
  },
  tagsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginTop: SPACING.lg,
  },
  tag: {
    backgroundColor: COLORS.primary,
    borderRadius: BORDER_RADIUS.pill,
    paddingHorizontal: SPACING.md,
    paddingVertical: SPACING.xs,
    marginRight: SPACING.sm,
    marginBottom: SPACING.sm,
  },
  tagText: {
    color: COLORS.textWhite,
    fontSize: 12,
    fontWeight: '500',
  },
  debugContainer: {
    backgroundColor: COLORS.backgroundSecondary,
    padding: SPACING.md,
    borderRadius: BORDER_RADIUS.md,
    marginTop: SPACING.lg,
  },
  debugText: {
    fontSize: 12,
    color: COLORS.textSecondary,
    marginBottom: SPACING.xs,
    textAlign: 'center',
  },
});

export default NewsArticle;